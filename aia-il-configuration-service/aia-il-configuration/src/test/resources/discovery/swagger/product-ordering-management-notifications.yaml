---
swagger: "2.0"
info:
  description: "Notifications published by the Product Ordering Management subdomain. \n\n###### Compliant with TMF622_Product_Ordering_Management_API_REST_Specification_R17.5.0\n\n`The documented APIs are not exposed at the gateway and are listed here only for documentation purposes.`\n"
  version: "2.1"
  title: Notification Specification - Product Ordering Management
  contact:
    name: Amdocs Inc.
    url: http://www.amdocs.com
    email: support@amdocs.com
  license:
    name: Amdocs Inc.
    url: http://www.amdocs.com
host: amdocs.com
basePath: /productOrdering/v2.1
schemes:
- https
paths:
  /productOrderCreationNotification:
    get:
      tags:
      - productOrder
      summary: Notifying about creation of a new product order entity is created
      description: |
        This notification is published when a new product order entity is created.
        ###### TMF Open API compliant

        **Reference values&#58;**
        - topic name (*Configuration&#58; spring.cloud.stream.bindings.Productorder_Resources_publish.destination*)
      operationId: productOrderCreationNotification
      parameters: []
      responses:
        "204":
          description: |
            *No Content*
          schema:
            $ref: '#/definitions/ProductOrderCreationNotification'
      x-dox-Microservice: ProductOrderMS
  /productOrderRemoveNotification:
    get:
      tags:
      - productOrder
      summary: Notifying about removal of an existing product order entity
      description: |
        This notification is published when a product order resource is removed.
        ###### TMF Open API compliant

        **Reference values&#58;**
        - topic name (*Configuration&#58; spring.cloud.stream.bindings.Productorder_Resources_publish.destination*)
      operationId: productOrderRemoveNotification
      parameters: []
      responses:
        "204":
          description: |
            *No Content*
          schema:
            $ref: '#/definitions/ProductOrderRemoveNotification'
      x-dox-Microservice: ProductOrderMS
  /productOrderStateChangeNotification:
    get:
      tags:
      - productOrder
      summary: Notifying about the change of the state of the product order entity
      description: "This notification is published when the state of the product order resource is changed.\n###### TMF Open API compliant\n\n**Reference values&#58;**\n- topic name (*Configuration&#58; spring.cloud.stream.bindings.productOrderStateChangeNotification_publish.destination*)\n\n**Header values&#58;**\n- *ProductOrder* - Indicates that the state of the product order entity was changed\n- *OrderItem* - Indicates that the state of the specified order item sub entities was changed\n- *AmendedByFutureOrderItem* - Indicates that the specified order item sub entities were amended to have a future requestedStartDate or requestedCompletionDate \n- *AmendedByProductOrder* - Indicates the identifier of the product order entity being amended by the subject product order entity \n"
      operationId: productOrderStateChangeNotification
      parameters: []
      responses:
        "204":
          description: |
            *No Content*
          schema:
            $ref: '#/definitions/ProductOrderStateChangeNotification'
      x-dox-Microservice: ProductOrderMS
  /productOrderChangeNotification:
    get:
      tags:
      - productOrder
      summary: Notifying about the change of the product order entity
      description: |
        This notification is published when the product order resource is changed.

        **Reference values&#58;**
        - topic name (*Configuration&#58; spring.cloud.stream.bindings.Productorder_Resources_publish.destination*)
      operationId: productOrderChangeNotification
      parameters: []
      responses:
        "204":
          description: |
            *No Content*
          schema:
            $ref: '#/definitions/ProductOrderChangeNotification'
      x-dox-Microservice: ProductOrderMS
  /productLimitedDurationFailedNotification:
    get:
      tags:
      - productOrder
      summary: Notifying about the failure during the creation of a limited-duration product
      description: |
        This notification is published when there is a failure during the creation of a ceased limited-duration product

        **Reference values&#58;**
        - topic name (*Configuration&#58; spring.cloud.stream.bindings.Limiteddurationproduct_publish.destination*)
      operationId: productLimitedDurationFailedNotification
      parameters: []
      responses:
        "204":
          description: |
            *No Content*
          schema:
            $ref: '#/definitions/ProductLimitedDurationFailedNotification'
      x-dox-Microservice: LimitDurationProductOrderMS
  /productOrderCompletedNotification:
    get:
      tags:
      - productOrder
      summary: Notifying about the change of the state of the order item sub entity to Completed
      description: |
        This notification is published when the state of order item sub resource is changed to Completed.

        **Reference values&#58;**
        - topic name (*Configuration&#58; spring.cloud.stream.bindings.productOrderCompletedNotification_publish.destination*)

        **Header values&#58;**
        - *ProductOrder* - Indicates that the state of the product order entity was changed
        - *OrderItem* - Indicates that the state of the specified order item sub entities was changed
        - *Category* - Category of the product order, for example, Residential, Business, Bulk, and so on
        - *SubCategory* - Sub category of the product order, for example, PreActivation, Suspend, and so on
      operationId: productOrderCompletedNotification
      parameters: []
      responses:
        "204":
          description: |
            *No Content*
          schema:
            $ref: '#/definitions/ProductOrderCompletedNotification'
      x-dox-Microservice: ProductOrderMS
  /productOrderSubmittedNotification:
    get:
      tags:
      - productOrder
      summary: Notifying about the change of the state of the order item sub entity to Submitted
      description: |
        This notification is published when the state of the order item sub resource is changed to Submitted.

         **Reference values&#58;**
        - topic name (*Configuration&#58; spring.cloud.stream.bindings.Submitorder_publish.destination*)

        **Header values&#58;**
        - *ProductOrder* - Indicates that the state of the product order entity was changed
        - *OrderItem* - Indicates that the state of the specified order item sub entities was changed
      operationId: productOrderSubmittedNotification
      parameters: []
      responses:
        "204":
          description: |
            *No Content*
          schema:
            $ref: '#/definitions/ProductOrderSubmittedNotification'
      x-dox-Microservice: SubmitProductOrderMS
  /productOrderSubmitFailureNotification:
    get:
      tags:
      - productOrder
      summary: Notifying about the failure during the change of the state of the product order entity to Submitted
      description: |
        This notification is published upon a failure when changing the state of the product order resource to Submitted.

         **Reference values&#58;**
        - topic name (*Configuration&#58; spring.cloud.stream.bindings.Submitorder_publish.destination*)
      operationId: productOrderSubmitFailureNotification
      parameters: []
      responses:
        "204":
          description: |
            *No Content*
          schema:
            $ref: '#/definitions/ProductOrderSubmitFailureNotification'
      x-dox-Microservice: SubmitProductOrderMS
  /productFutureOrderItemNotification:
    get:
      tags:
      - productOrder
      summary: Notifying about readiness of future product order to be launched
      description: |
        This notification is published when the future product order is ready to be launched

         **Reference values&#58;**
        - topic name (*Configuration&#58; spring.cloud.stream.bindings.Futurelauncher_publish.destination*)
      operationId: productFutureOrderItemNotification
      parameters: []
      responses:
        "204":
          description: |
            *No Content*
          schema:
            $ref: '#/definitions/ProductFutureOrderItemNotification'
      x-dox-Microservice: FutureLauncherProductOrderMS
  /productFutureOrderItemChangeNotification:
    get:
      tags:
      - productOrder
      summary: Notifying about the change of the future order item entity
      description: |
        This notification is published when the future order item resource is changed.

         **Business rules&#58;**
        - The notification publish is configurable
        - Relevant only for future order items with specific actions
        - Relevant only for future order items with specific state changes OR specific attribute changes

        **Header values&#58;**
        - *OrderItem.action* - Indicates that action of the future order item.
        - *OrderItem.state* - Indicates that (updated) state of the future order item.
        - *OrderItem.attribute* - Indicates that (updated) attribute of the future order item.

         **Reference values&#58;**
        - topic name (*Configuration&#58; spring.cloud.stream.bindings.Futurelauncher_publish.destination*)
        - notification publish (*Configuration&#58; configuration.productFutureOrderItemChangeNotification.publish*)
        - specific actions (*Configuration&#58; configuration.productFutureOrderItemChangeNotification.orderItem.actions*)
        - specific states (*Configuration&#58; configuration.productFutureOrderItemChangeNotification.orderItem.states*)
        - specific attributes (*Configuration&#58; configuration.productFutureOrderItemChangeNotification.orderItem.attributes*)
      operationId: productFutureOrderItemChangeNotification
      parameters: []
      responses:
        "204":
          description: |
            *No Content*
          schema:
            $ref: '#/definitions/ProductFutureOrderItemChangeNotification'
      x-dox-Microservice: FutureLauncherProductOrderMS
      x-dox-NotImplemented: true
  /FalloutEventNotification:
    get:
      tags:
      - productOrder
      summary: Notifying about fallout events
      description: "This notification is published a fallout event from a source system and the tracking to resolution \n\n **Reference values&#58;**\n- topic name (*Configuration&#58; spring.cloud.stream.bindings.Fallout_publish.destination*)\n"
      operationId: falloutEventNotification
      parameters: []
      responses:
        "204":
          description: |
            *No Content*
          schema:
            $ref: '#/definitions/FalloutNotification'
      x-dox-Microservice: FutureLauncherProductOrderMS
  /productOrderArchiveNotification:
    get:
      tags:
      - productOrder
      summary: Notifying to archive about a resource to be archived
      description: |
        This notification is published when a product order resource is deleted and it needs to be archived.
        ###### TMF Open API compliant

        **Reference values&#58;**
        - topic name (*Configuration&#58; spring.cloud.stream.bindings.productOrderArchiveNotification.destination*)

        **Header values&#58;**
        - *ProductOrder* - Indicates that the state of the product order entity was changed
        - *OrderItem* - Indicates that the state of the specified order item sub entities was changed
      operationId: productOrderArchiveNotification
      parameters: []
      responses:
        "204":
          description: |
            *No Content*
          schema:
            $ref: '#/definitions/ProductOrderArchiveNotification'
      x-dox-Microservice: ProductOrderMS
definitions:
  ProductOrderCreationNotification:
    allOf:
    - $ref: '#/definitions/Notification'
    - type: object
      properties:
        event:
          $ref: '#/definitions/ProductOrderCreationEvent'
  Notification:
    type: object
    discriminator: eventType
    properties:
      securityToken:
        type: string
        description: |
          Security Token of the message
      eventId:
        type: string
        description: |
          Identifier of the event
      eventTime:
        type: string
        description: |
          Creation date of the event
      eventType:
        type: string
        description: |
          Name of the notification resource
      eventClass:
        type: string
        description: |
          Fully qualified name of java class serialized in the event
      eventVersion:
        type: string
        description: |
          The version of the event in case there was backward compatibility and there is more then one
      isResource:
        type: boolean
        description: |
          Indicate if the notification is for resource CUD event
      resourceName:
        type: string
        description: |
          Name of resource entity. Filled when isResource is true.
      deprecated:
        type: boolean
        description: |
          Indicator if this event has been deprecated
      headers:
        type: object
        description: |
          Addiitonal data added to the event
        additionalProperties:
          type: string
          x-amdocs:
            refDefinition: EventHeaders
    description: |
      Notification structure containing the generic fields.
      This notification structure owns an event structure (*SpecificEvent* placeholder) linked to the resource concerned by the notification using the resource name as access field (*resourceName* placeholder).
  ProductOrderCreationEvent:
    allOf:
    - $ref: '#/definitions/Event'
    - type: object
      properties:
        productOrder:
          $ref: '#/definitions/ProductOrder'
  Event:
    type: object
    properties:
      messageKey:
        type: string
        description: |
          Unqiue ID of Message in Kafka
      partitionKey:
        type: string
        description: |
          Key used in Kafka for partition
      name:
        type: string
        description: |
          Logical Name of the event
      type:
        type: string
        description: |
          Type of the event such as ResourceCreate, ResourceUpdate. Not filled for business event.
      key:
        type: string
        description: |
          ID of the associated resource entity. Not filled for business event.
      resourceIdentifier:
        type: string
        description: |
          Type of the associated resource entity. Not filled for business event.
      resourceVersion:
        type: string
        description: |
          Version of the associated resource entity. Not filled for business event.
      optimisticLockingValue:
        type: string
        description: |
          The current version of the resource in persistence storage(e-tag). Not filled for business event.
      deprecated:
        type: boolean
        description: Indicator if this event has been deprecated
  ProductOrder:
    type: object
    required:
    - orderItem
    properties:
      id:
        type: string
        description: |
          Unique identifier of the product order
          *readOnly&#58;true* (except for specific ProductOrder.category)
      href:
        type: string
        description: |
          Hypertext reference to the product order
        readOnly: true
      category:
        type: string
        description: |
          Category of the product order, for example, Residential, Business, Bulk, and so on
      subCategory:
        type: string
        description: |
          Sub category of the product order, for example, PreActivation, Suspend, and so on
      priority:
        type: string
        description: |
          Priority of the product order
      description:
        type: string
        description: |
          Description of the product order
      state:
        type: string
        description: |
          State of the product order, for example, Acknowledged, Rejected, Pending, and so on
        readOnly: true
      externalId:
        type: string
        description: |
          External ID of the product order. This parameter is usually provided by a consumer to identify the product order in the consumer system.
      orderDate:
        type: string
        format: date-time
        description: |
          Date on which the product order was created
        readOnly: true
      lastUpdate:
        type: string
        format: date-time
        description: "Date on which the product order was last updated.This parameter is not implemented \n"
        readOnly: true
      completionDate:
        type: string
        format: date-time
        description: |
          Date on which the product order was completed
        readOnly: true
      requestedStartDate:
        type: string
        format: date-time
        description: |
          Date on which the product order was requested to be started
      requestedCompletionDate:
        type: string
        format: date-time
        description: |
          Date on which the product order was requested to be completed
      expectedCompletionDate:
        type: string
        format: date-time
        description: |
          Date on which the product order is expected to be completed
        readOnly: true
      notificationContact:
        type: string
        description: |
          Contact for the notification
      orderPriceDate:
        type: string
        format: date-time
        description: |
          Date on which the product order price was calculated
        readOnly: true
      isCustomerVisible:
        type: boolean
        description: |
          Indicates whether the product order is visible to the customer
        readOnly: true
        default: true
      '@type':
        type: string
        description: |
          Type of the resource - *ProductOrder*
      relatedParty:
        type: array
        description: |
          Party associated with the product order
        items:
          $ref: '#/definitions/RelatedPartyRef'
      billingAccount:
        $ref: '#/definitions/BillingAccountRef'
      orderItem:
        type: array
        description: |
          Active order item of the product order
        items:
          $ref: '#/definitions/OrderItem'
      orderTotalPrice:
        type: array
        description: |
          Total price of the product order
        readOnly: true
        items:
          $ref: '#/definitions/OrderPrice'
      channel:
        type: array
        description: |
          Channel of the product order
        items:
          $ref: '#/definitions/ChannelRef'
      validation:
        $ref: '#/definitions/Validation'
      payment:
        type: array
        description: |
          Payment performed for the entire order or for an order item
        items:
          $ref: '#/definitions/PaymentRef'
      immediatePromotion:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/ImmediatePromotion'
        x-dox-DesignNote: |
          Reference to the Immediate Promotions with details
      externalIdentifier:
        type: array
        description: |
          List of external identifiers related to the product order
        items:
          $ref: '#/definitions/ExternalIdentifier'
      orderRelationship:
        type: array
        description: |
          Relation to other product order resources
        items:
          $ref: '#/definitions/OrderRelationship'
      note:
        type: array
        description: |
          Extra information about the product order
        items:
          $ref: '#/definitions/Note'
      stateDate:
        type: array
        description: |
          Represents the ProductOrder state transition dates.
        items:
          $ref: '#/definitions/BusinessActivity'
      referredEntity:
        type: array
        description: |
          An optional generic object that can be used to represents a split or a propagated data of an entity referenced within the current resource  structure. This object  holds an explicit relation all the sub entities to which it relates. For example, a specific Payment referenced within an order holds explicit relation to all order items and all item prices that it covers.
        items:
          $ref: '#/definitions/ReferredEntity'
      attachment:
        type: array
        description: |
          Attachment linked to Product Order
        items:
          $ref: '#/definitions/AttachmentRef'
      agreement:
        type: array
        description: |
          Agreement linked to Product Order
        items:
          $ref: '#/definitions/AgreementRef'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: ProductOrderExtensions
    description: |
      Product order resource
  RelatedPartyRef:
    type: object
    properties:
      id:
        type: string
        description: |
          Unique identifier of the related party
      href:
        type: string
        description: |
          Hypertext reference to the related party, could be a party reference or a party role reference
      name:
        type: string
        description: |
          Name of the related party. This field is marked as Personally Identifiable Information(PII) using tag 'pii' which means it is a sensitive field and it will be masked with rule 'PII:name:fullName' at the time of logging.
        x-amdocs:
          protected-data:
            pii: name:fullName
      role:
        type: string
        description: |
          Role played by the related party
      '@referredType':
        type: string
        description: |
          Name of the type of the referred resource entity
      lastName:
        type: string
        description: |
          Last name of the related party. This field is marked as Personally Identifiable Information(PII) using tag 'pii' which means it is a sensitive field and it will be masked with rule 'PII:name:fullName' at the time of logging.
        x-amdocs:
          protected-data:
            pii: name:fullName
      firstName:
        type: string
        description: |
          First name of the related party.This field is marked as Personally Identifiable Information(PII) using tag 'pii' which means it is a sensitive field and it will be masked with rule 'PII:name:fullName' at the time of logging.
        x-amdocs:
          protected-data:
            pii: name:fullName
      phoneNumber:
        type: string
        description: |
          Phone number of the related party. This field is marked as Personally Identifiable Information(PII) using tag 'pii' which means it is a sensitive field and it will be masked with rule 'PII:contactInfo:phoneNumber' at the time of logging.
        x-amdocs:
          protected-data:
            pii: contactInfo:phoneNumber
      emailAddress:
        type: string
        description: |
          emailAddress of the related party
      segment:
        type: string
        description: |
          segment of the related party
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: RelatedPartyRefExtensions
        x-dox-NotImplemented: true
    description: "Party or party role that is linked to a specific entity.First name,last name,phone number, email address are used only when related party is not used as reference but as object. For now those fields in used only in shipment functionality. \n"
  BillingAccountRef:
    type: object
    properties:
      id:
        type: string
        description: |
          Unique identifier of the billing account
      href:
        type: string
        description: |
          Hypertext reference to the billing account
      name:
        type: string
        description: |
          Name of the billing account
      '@referredType':
        type: string
        description: |
          Name of the type of the referred resource entity
        x-dox-NotImplemented: true
      ratingType:
        type: string
        description: |
          Rating Type associated with Billing Account. One of two possible value postpaid or prepaid must be filled.
        readOnly: true
    description: |
      Reference to the billing account
  OrderItem:
    type: object
    properties:
      id:
        type: string
        description: |
          Unique identifier of the order item
          *readOnly&#58;true* (except for specific ProductOrder.category)
      action:
        type: string
        description: |
          Action applied to the order item (for example - add, suspend, resume, terminate, and so on). If there are multiple actions, a semicolon (;) is used as the delimiter.
      state:
        type: string
        description: |
          State of the order item
        readOnly: true
      quantity:
        type: integer
        description: |
          Quantity of the order item. This property is relevant only for the top-most non-serialized order items.
      '@type':
        type: string
        description: |
          Type of the resource - *OrderItem*.
        x-dox-NotImplemented: true
      readOnly:
        type: boolean
        description: |
          Indicates whether the order item can be reconfigured
        readOnly: true
      completionDate:
        type: string
        format: date-time
        description: |
          Date on which the order item was completed
        readOnly: true
      requestedStartDate:
        type: string
        format: date-time
        description: |
          Date on which the order item was requested to be started
      requestedCompletionDate:
        type: string
        format: date-time
        description: |
          Date on which the order item was requested to be completed
      expectedCompletionDate:
        type: string
        format: date-time
        description: |
          Date on which the order item is expected to be completed
        readOnly: true
      retroactiveChangeDate:
        type: string
        format: date-time
        description: |
          Past date of a retroactive change performed on the order item
      creationDate:
        type: string
        format: date-time
        description: "Item creation date \n"
      itemPriceDate:
        type: string
        format: date-time
        description: "Date according to which the product order item was quoted \n"
      itemPrice:
        type: array
        description: |
          Price of the order item
        readOnly: true
        items:
          $ref: '#/definitions/OrderPrice'
      itemTotalPrice:
        type: array
        description: |
          Total price of the order item
        readOnly: true
        items:
          $ref: '#/definitions/OrderPrice'
      orderItemRelationship:
        type: array
        description: |
          Relationship between order items
        items:
          $ref: '#/definitions/OrderItemRelationship'
      productOffering:
        $ref: '#/definitions/ProductOfferingRef'
      product:
        $ref: '#/definitions/Product'
      billingAccount:
        $ref: '#/definitions/BillingAccountRef'
      appointment:
        $ref: '#/definitions/AppointmentRef'
      orderItem:
        type: array
        description: |
          List of order items
        items:
          $ref: '#/definitions/OrderItem'
      productOfferingGroupOption:
        $ref: '#/definitions/ProductOfferingGroupOption'
      itemTerm:
        type: array
        items:
          $ref: '#/definitions/OrderTerm'
      modifyReason:
        type: array
        items:
          $ref: '#/definitions/ModifyReason'
      nextAction:
        type: array
        items:
          $ref: '#/definitions/NextAction'
      payment:
        type: array
        items:
          $ref: '#/definitions/PaymentRef'
      metadata:
        type: array
        description: |
          Product offering metadata
        items:
          $ref: '#/definitions/Metadata'
      relatedImmediatePromotion:
        type: array
        description: |
          List of immediate promotions related to the order item
        readOnly: true
        items:
          $ref: '#/definitions/RelatedImmediatePromotion'
        x-dox-DesignNote: |
          Reference to the *immediatePromotionRef* entity.
      stock:
        type: array
        description: |
          List of stock items
        readOnly: true
        items:
          $ref: '#/definitions/StockItem'
      stockReservation:
        type: array
        description: |
          List of stock reservations
        readOnly: true
        items:
          $ref: '#/definitions/ProductStockReservationRef'
      characteristic:
        type: array
        description: |
          Characteristics of the product offering
        items:
          $ref: '#/definitions/ProductCharacteristic'
      externalIdentifier:
        type: array
        description: |
          List of external identifiers related to the order item
        items:
          $ref: '#/definitions/ExternalIdentifier'
      note:
        type: array
        description: |
          Extra information about the order item
        items:
          $ref: '#/definitions/Note'
      stateDate:
        type: array
        description: |
          Represents the order item state transition dates
        items:
          $ref: '#/definitions/BusinessActivity'
      attachment:
        type: array
        description: |
          Attachment linked to Order Item
        items:
          $ref: '#/definitions/AttachmentRef'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: OrderItemExtensions
    description: "An identified part of the product order. A product order is decomposed into one or more order items. \n"
  OrderPrice:
    type: object
    properties:
      id:
        type: string
        description: |
          Unique identifier of the catalog price
      name:
        type: string
        description: |
          Name of the catalog price, for example, Subscription Price
      description:
        type: string
        description: |
          Detailed description of the catalog price of the entity (the product order or the order item)
      unitOfMeasure:
        type: string
        description: |
          Unit of measurement of the catalog price. This property is populated if the price type is allowance, such as gigabytes, minutes, and so on.
      recurringChargePeriod:
        type: string
        description: |
          Period for which to repeat the application of the recurring charge - days, weeks, months, or years. This property is populated only if the price type is Recurring.
      recurringChargePeriodLength:
        type: integer
        description: |
          The period length of the recurring charge
      priceType:
        type: string
        description: |
          Category of the catalog price, for example, allowance, recurring, and so on
      '@type':
        type: string
        description: |
          Type of the resource - *OrderPrice*
        x-dox-NotImplemented: true
      price:
        $ref: '#/definitions/Price'
      finalPrice:
        $ref: '#/definitions/Price'
      standalonePrice:
        $ref: '#/definitions/Price'
      priceAlteration:
        type: array
        description: |
          Price alteration records
        items:
          $ref: '#/definitions/PriceAlteration'
      billingAccount:
        $ref: '#/definitions/BillingAccountRef'
      immediatePayOption:
        $ref: '#/definitions/ImmediatePayOption'
      installmentOption:
        $ref: '#/definitions/InstallmentOption'
      orderPriceRelationship:
        $ref: '#/definitions/OrderPriceRelationship'
      taxIncluded:
        type: string
        description: |
          Indicates whether the price is defined in CatalogONE as including tax or excluding tax. Valid values are Excluded and Included.
      priceOverrideOption:
        $ref: '#/definitions/PriceOverrideOption'
      role:
        type: string
        description: |
          The role of the price, for example, price, bundle price alteration, and so on
      payment:
        type: array
        description: |
          Payment performed for a specific order price
        items:
          $ref: '#/definitions/PaymentRef'
      prorationFactor:
        type: number
        format: double
        description: |
          Proration factor used to prorate this amount
      periodCoverage:
        $ref: '#/definitions/TimePeriod'
      relatedAppliedBillingRate:
        $ref: '#/definitions/RelatedAppliedBillingRateRef'
      productOfferingPrice:
        $ref: '#/definitions/ItemProductOfferingPriceRef'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: OrderPriceExtensions
        x-dox-NotImplemented: true
    description: "An amount, usually of money, that represents the actual price paid by the customer for the order item or the product order in CatalogONE \n"
  Price:
    type: object
    properties:
      taxIncludedAmount:
        $ref: '#/definitions/Money'
      dutyFreeAmount:
        $ref: '#/definitions/Money'
      taxAmount:
        $ref: '#/definitions/Money'
      taxRate:
        type: number
        format: float
      percentage:
        type: number
        format: float
      priceReduction:
        $ref: '#/definitions/Money'
      priceOverride:
        $ref: '#/definitions/Money'
      priceRecordId:
        type: string
        description: |
          The unique identifier of the price in the pricing domain.
      chargeType:
        type: string
        description: |
          The charge type that the price represents. The supported values are&#58;<ul><li>debit<li>credit</ul>
      impactingPriceParameter:
        type: array
        description: |
          The parameters that impact the price
        items:
          $ref: '#/definitions/PriceParam'
      appliedTax:
        type: array
        items:
          $ref: '#/definitions/AppliedTax'
      rateValidity:
        $ref: '#/definitions/TimePeriod'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: PriceExtensions
        x-dox-NotImplemented: true
    description: |
      The price of current catalog item. It is set to null if the price record is
      missing or if there is any exception.
  Money:
    type: object
    properties:
      unit:
        type: string
        description: |
          The currency of the price
      value:
        type: number
        description: |
          The amount of the price
    description: |
      The price and currency of the catalog item
  PriceParam:
    type: object
    properties:
      type:
        type: string
        description: |
          The type of the parameter
      name:
        type: string
        description: |
          The name of the parameter
      value:
        type: string
        description: |
          The value of the parameter
    description: |
      The parameters that may impact/impact the price
  AppliedTax:
    type: object
    required:
    - taxAmount
    - taxDefinition
    - taxableAmount
    properties:
      taxDefinition:
        $ref: '#/definitions/TaxDefinition'
      taxAmount:
        $ref: '#/definitions/Money'
      taxableAmount:
        $ref: '#/definitions/Money'
      exemptAmount:
        $ref: '#/definitions/Money'
      periodCoverage:
        $ref: '#/definitions/TimePeriod'
      characteristic:
        type: array
        items:
          $ref: '#/definitions/Characteristic'
      component:
        $ref: '#/definitions/Component'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: AppliedTaxExtensions
        x-dox-NotImplemented: true
    description: Calculated tax response
  TaxDefinition:
    type: object
    required:
    - exemptionType
    - isExemption
    - taxJurisdiction
    - taxRate
    - taxType
    - vaidFor
    properties:
      name:
        type: string
        description: The display name of tax type
      taxRate:
        type: number
        format: float
        description: Rate of tax
      taxType:
        type: string
        description: VAT/GST etc
      category:
        type: string
        description: Luxury/Standard etc
      isExemption:
        type: boolean
        description: Where the tax definition has exemption defined on it
      exemptionType:
        type: string
        description: Exemption type. Valid Values - Customer, Service, Jurisdiction, None.
      vaidFor:
        $ref: '#/definitions/TimePeriod'
      taxJurisdiction:
        $ref: '#/definitions/TaxJurisdiction'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: TaxDefinitionExtensions
        x-dox-NotImplemented: true
    description: Tax definition
  TimePeriod:
    type: object
    properties:
      startDateTime:
        type: string
        format: date-time
        description: |
          Start date and time of the period
      endDateTime:
        type: string
        format: date-time
        description: |
          End date and time of the period
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: TimePeriodExtensions
        x-dox-NotImplemented: true
    description: |
      Time period
  TaxJurisdiction:
    type: object
    required:
    - level
    - name
    properties:
      name:
        type: string
      level:
        type: string
      id:
        type: string
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: TaxJurisdictionExtensions
        x-dox-NotImplemented: true
  Characteristic:
    type: object
    properties:
      name:
        type: string
      value:
        type: string
      valueType:
        type: string
        description: |
          Value type of the characteristic
        x-dox-NotImplemented: true
  Component:
    type: object
    properties:
      splitCode:
        type: string
        description: |
          Referenced split code that is used to calculate the specific applied tax
      amount:
        $ref: '#/definitions/Money'
      revenueType:
        type: string
        description: |
          Revenue type of the component tax calculation item, such as Voice or Data
      taxCode:
        type: string
        description: |
          Tax code of the component tax calculation item
    description: |
      Revenue component details if the tax calculation item is split to revenue components
  PriceAlteration:
    type: object
    properties:
      name:
        type: string
        description: |
          Name of the price, for example, Subscription Price
      description:
        type: string
        description: "Detailed description of the price of the entity \n"
      unitOfMeasure:
        type: string
        description: |
          Unit of measurement of the price. This property is populated if the price type is allowance, such as gigabytes, minutes, and so on.
      recurringChargePeriod:
        type: string
        description: |
          Recurring charge period. This property is populated if the price type is Recurring.
      recurringChargePeriodLength:
        type: integer
        description: |
          The period length of the recurring charge
      priceType:
        type: string
        description: |
          Category of the price, for example, allowance, recurring, and so on
      applicationDuration:
        type: integer
        description: |
          Duration of the price
      priority:
        type: integer
        description: |
          Priority of the price
      alterationType:
        type: string
        description: |
          Type of the alteration
      promotionActionId:
        type: string
        description: |
          Unique identifier of the promotion action triggering this price alteration
      immediatePromotionId:
        type: string
        description: |
          Unique identifier of the promotion instance
      alterationProductOfferingPriceId:
        type: string
        description: |
          Unique identifier of the product offering price on behalf of which the price alteration was given
      alterationBundleProductOfferingId:
        type: string
        description: |
          Unique identifier of the bundle product offering on behalf of which the price alteration was given
      alterationApplyOrder:
        type: integer
        description: |
          Order of the alteration price appliance
      '@type':
        type: string
        description: |
          Type of the resource
        x-dox-NotImplemented: true
      chargeType:
        type: string
        description: "Charge type represented by the price alteration. The supported values are&#58;<ul><li>debit<li>discount<li>credit</ul> \n"
      prorationFactor:
        type: number
        format: double
        description: |
          Proration factor used to prorate this amount
      periodCoverage:
        $ref: '#/definitions/TimePeriod'
      price:
        $ref: '#/definitions/Price'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: PriceAlterationExtensions
        x-dox-NotImplemented: true
    description: |
      An amount, usually of money, that modifies the price charged for an  item
  ImmediatePayOption:
    type: object
    properties:
      payOption:
        type: string
        description: |
          The immediate pay option:
          <ul>
          <li> *MUST* - The price must be paid immediately
          <li> *MAY* - The price might be paid immediately
          </ul>
      payAmount:
        $ref: '#/definitions/Money'
      minPayAmount:
        $ref: '#/definitions/Money'
      payImmediately:
        type: boolean
        description: |
          Indicates whether the price included in the immediate payment.
          If the pay option is set to MUST, this indication is set to true.
          If the pay option is set to MAY, this indication is set to either true or false based on a customer decission.
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: ImmediatePayOptionExtensions
        x-dox-NotImplemented: true
    description: |
      The payment options for the product offering price payment. The payment options can indicate whether the price must or may be paid immediatelly.
      In addition, the payment options include an indication whether the price should be included in the immediate payment or not.
      If the payment option is set to must, this indication is set to true. Otherwise, if the payment option is set to may, the indication is set to either
      true or false based on a customer decission.
  InstallmentOption:
    type: object
    properties:
      id:
        type: string
        description: |
          The identifier of the installment option
      installmentOption:
        type: string
        description: |
          Indicates if installment options are optional / mandatory for the price
        readOnly: true
      numberOfInstallments:
        type: integer
        description: |
          The number of installments
      downPayment:
        $ref: '#/definitions/PaymentAmount'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: InstallmentOptionExtensions
        x-dox-NotImplemented: true
    description: |
      Represents an installment option for an  price
  PaymentAmount:
    type: object
    properties:
      amount:
        $ref: '#/definitions/Money'
      percentage:
        type: number
        format: float
        description: |
          Represents the percentage that the amount represents out of the price
      taxIncludedAmount:
        $ref: '#/definitions/Money'
      dutyFreeAmount:
        $ref: '#/definitions/Money'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: PaymentAmountExtensions
        x-dox-NotImplemented: true
    description: |
      Represents a payment amount
  OrderPriceRelationship:
    type: object
    required:
    - id
    - type
    properties:
      id:
        type: string
        description: |
          Unique identifier of the related *OrderPrice* entity
      type:
        type: string
        description: |
          Type of the relationship
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: OrderPriceRelationshipExtensions
        x-dox-NotImplemented: true
    description: |
      Relationship between the *OrderPrice* entities
  PriceOverrideOption:
    type: object
    properties:
      overrideType:
        type: string
        description: |
          Indicates which override option the CSR can apply. Valid Values &#58; waive, absolute, increase, decrease
      overrideValue:
        $ref: '#/definitions/PaymentAmount'
      validFor:
        $ref: '#/definitions/TimePeriod'
      relatedParty:
        $ref: '#/definitions/RelatedPartyRef'
      reason:
        $ref: '#/definitions/ModifyReason'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: PriceOverrideOptionExtensions
        x-dox-NotImplemented: true
    description: |
      The waive and override data of a price
  ModifyReason:
    type: object
    required:
    - action
    - name
    properties:
      name:
        type: string
        description: |
          Name of the modification reason
      reasonText:
        type: string
        description: |
          Text of the modification reason. This property is populated if the type of the modification reason requires an input of a free text.
      action:
        type: string
        description: |
          Action performed on the instance of the product offering
      metadata:
        type: array
        description: |
          Metadata of the Modify Reason
        items:
          $ref: '#/definitions/Metadata'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: ModifyReasonExtensions
        x-dox-NotImplemented: true
    description: |
      Modification reason associated with the action performed on the product offering that is related to the order item
  Metadata:
    type: object
    properties:
      name:
        type: string
        description: |
          Name of the metadata
      value:
        type: string
        description: |
          Value of the metadata
      metadataType:
        type: string
        description: |
          Type of the metadata
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: MetadataExtensions
        x-dox-NotImplemented: true
    description: |
      Catalog and operational metadata
  PaymentRef:
    type: object
    properties:
      id:
        type: string
        description: |
          Unique identifier of the payment
      href:
        type: string
        description: |
          Hypertext reference to the payment
      name:
        type: string
        description: |
          Name of a payment
        x-dox-NotImplemented: true
      '@referredType':
        type: string
        description: |
          Name of the type of the referred resource entity
        x-dox-NotImplemented: true
      role:
        type: string
        description: |
          The role of the payment, for example, internal, external, and so on
    description: |
      Reference to the immediate payment information that is captured for the product order if such payment was performed at the product order submission
  RelatedAppliedBillingRateRef:
    type: object
    properties:
      id:
        type: string
        description: |
          Unique identifier of the applied billing rate
      href:
        type: string
        description: |
          Hypertext reference to the applied billing rate
      '@referredType':
        type: string
        description: "Type of the applied billing rate, for example, *AppliedCustomerBillingOneTimeCharge* or *AppliedCustomerBillingRecurringCharge*    \n"
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: RelatedAppliedBillingRateRefExtensions
        x-dox-NotImplemented: true
    description: |
      Relation to another applied billing rate
  ItemProductOfferingPriceRef:
    properties:
      id:
        type: string
        description: |
          The ID of the reference
      href:
        type: string
        description: |
          Hypertext reference to the product offering price
        x-dox-NotImplemented: true
      version:
        type: string
        description: |
          The version of the product offering price
      validFor:
        $ref: '#/definitions/TimePeriod'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: ItemProductOfferingPriceRefExtensions
        x-dox-NotImplemented: true
    description: |
      The reference to the action discount. This entity represents the pricing entity that defines the actual discount.
  OrderItemRelationship:
    type: object
    properties:
      id:
        type: string
        description: |
          Unique identifier of the referenced order item
      type:
        type: string
        description: |
          Type of the relationship to the related order item
      externalId:
        type: string
        description: |
          External ID of the referenced order item.
          This value is used if the referenced order item is not persisted yet (that is, no ID was assigned for it). The *id* attribute, if set, takes precedence over the external ID.
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: OrderItemRelationshipExtensions
        x-dox-NotImplemented: true
    description: |
      Relationship between order items
  ProductOfferingRef:
    type: object
    required:
    - id
    properties:
      id:
        type: string
        description: |
          Unique identifier of the product offering
      href:
        type: string
        description: |
          Hypertext reference to the product offering
      name:
        type: string
        description: |
          Name of the product offering
      '@referredType':
        type: string
        description: |
          Name of the type of the referred resource entity
        x-dox-NotImplemented: true
      productOfferingType:
        type: string
        description: |
          Type of the product offering
      productOfferingTypeId:
        type: string
        description: |
          Type ID of the product offering
      productOfferingTypeGroup:
        type: string
        description: |
          The type of the product offering group
      productOfferingClassification:
        type: string
        description: |
          The classification of the product offering. Valid values: customerOffer, subscriberMainOffer, subscriberOffer
      serialized:
        type: boolean
        description: |
          Indicates whether the product offering is maintained per instance or can represent a bulk quantity
      primary:
        type: boolean
        description: |
          Indicates whether the product offering has a business significance for the customer&#58;
          - It is reflected as a product for the customer and it is actionable - the customer can perform ordering actions on it
          - An action performed on a primary offer can impact the actions available for its bundled or dependent offers (for example, when ownership of a primary offer is changed some internal offers cannot be added or removed)
      version:
        type: string
        description: |
          Version of the product offering
      valueRank:
        type: integer
        description: |
          Value rank of the product offering
      attachment:
        type: array
        items:
          $ref: '#/definitions/Attachment'
      durationPolicy:
        $ref: '#/definitions/DurationPolicy'
    description: |
      Reference to the product offering entities that are orderable from the provider of the catalog. The resource includes pricing information.
  Attachment:
    type: object
    properties:
      id:
        type: string
        description: Unique Identifier of the attachment
      href:
        type: string
        description: Hypertext reference to the individual.
      name:
        type: string
        description: Name of the Attachment
      description:
        type: string
        description: Attachment description
      type:
        type: string
        description: |
          Identifies the type of the attachment - identity, invoice, quote etc.
      mimeType:
        type: string
        description: Attachment mimeType
      size:
        type: number
        description: Size of the Attachment
      sizeUnit:
        type: string
        description: Unit of measure for size ( bytes, kiloBytes etc.)
      url:
        type: string
        description: |
          URL/location of the attachment in underlying document management system.
      relatedEntity:
        $ref: '#/definitions/EntityRef'
      validFor:
        $ref: '#/definitions/TimePeriod'
    description: Attachment resource
  EntityRef:
    type: object
    properties:
      id:
        type: string
        description: Unique identifier of the related entity
      href:
        type: string
        description: Hypertext reference to the related entity
      name:
        type: string
        description: Name of the related entity
      description:
        type: string
        description: Description of the related entity
      referredType:
        type: string
        description: |
          Type of the related entity (e.g. individual, bill, product, account etc.). Always in lower case.
    description: |
      Describes a reference to an entity to which the attachment is associated
  DurationPolicy:
    type: object
    properties:
      duration:
        $ref: '#/definitions/Quantity'
      startDatePolicy:
        type: string
        description: |
          Start date of the policy, from which the duration is calculated
      endDatePolicy:
        type: string
        description: |
          End date of the policy, until which the duration is calculated
      effectiveFor:
        $ref: '#/definitions/TimePeriod'
      terminationPolicy:
        type: string
        description: |
          Defines the termination policy upon duration end date. Currently used by promotion action only.
      isOverridden:
        type: boolean
        description: |
          Indicates if duration policy is overridden manually by the user. Currently used for Promotions only.
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: DurationPolicyExtensions
        x-dox-NotImplemented: true
    description: |
      Policy for calculting a limited duration for any entity
  Quantity:
    type: object
    properties:
      units:
        type: string
        description: |
          Units that are associated with the quantity
      amount:
        type: number
        description: |
          Amount that is associated with the quantity
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: QuantityExtensions
        x-dox-NotImplemented: true
    description: |
      Quantity of a resource
  Product:
    type: object
    properties:
      id:
        type: string
        description: |
          Unique identifier of the product
      href:
        type: string
        description: |
          Hypertext reference to the product
      name:
        type: string
        description: |
          Name of the product
      referenceId:
        type: string
        description: |
          Reference ID of the product
      status:
        type: string
        description: |
          State of the product in the Product Inventory subdomain
      version:
        type: string
        description: |
          Version of the product in the Product Inventory subdomain
      primaryProductId:
        type: string
        description: |
          Unique identifier of the primary product. This property is populated only when the product is a product reference for the *Enable By* relation, and the referenced product is a product in the inventory and is not part of the order. In this case, the property contains the ID of the product ancestor that is marked as primary. This property and *productOrderRef* are mutually exclusive.
      activationDate:
        type: string
        format: date-time
        description: |
          Date on which the product was activated
      terminationDate:
        type: string
        format: date-time
        description: |
          Date on which the product is terminated
      alternateId:
        type: integer
        format: int64
        description: |
          Alternate identifier of the product
      relatedParty:
        type: array
        description: |
          Party associated with the product
        items:
          $ref: '#/definitions/RelatedPartyRef'
      productSpecification:
        $ref: '#/definitions/ProductSpecificationRef'
      characteristic:
        type: array
        description: |
          Characteristic of the product
        items:
          $ref: '#/definitions/ProductCharacteristic'
      place:
        type: array
        description: |
          Place of the product
        items:
          $ref: '#/definitions/PlaceRef'
      productRelationship:
        type: array
        description: |
          Relationship of the product
        items:
          $ref: '#/definitions/ProductRelationship'
      metadata:
        type: array
        description: |
          Product specification metadata
        items:
          $ref: '#/definitions/Metadata'
      productOrder:
        $ref: '#/definitions/ProductOrderRef'
      statusReason:
        type: array
        description: |
          The reason of the product state. This property is populated only when the referenced product is a product in the inventory.
        items:
          $ref: '#/definitions/StatusReason'
      businessActivity:
        type: array
        description: |
          Business activities with correlated dates for each activity
        items:
          $ref: '#/definitions/BusinessActivity'
      statusChangeDate:
        type: string
        format: date-time
        description: |
          The product last status chane date.May be equal to the network fulfillment date, or set according to different logic.
      agreement:
        type: array
        description: |
          Agreement Item linked to Product Order
        items:
          $ref: '#/definitions/AgreementItemRef'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: ProductExtensions
        x-dox-NotImplemented: true
    description: "An owned product or a product to be provided \n"
  ProductSpecificationRef:
    type: object
    required:
    - id
    properties:
      id:
        type: string
        description: |
          Unique identifier of the product specification
      href:
        type: string
        description: |
          Hypertext reference to the product specification
      version:
        type: string
        description: |
          Version of the product specification
        x-dox-NotImplemented: true
      name:
        type: string
        description: |
          Name of the product specification
      productSpecificationType:
        type: string
        description: |
          Type of the product specification
      productSpecificationTypeId:
        type: string
        description: |
          Type ID of the product specification
    description: |
      Detailed information of a tangible or intangible object that is made available externally in the form of a product offering to customers or other parties playing a party role
  ProductCharacteristic:
    type: object
    properties:
      name:
        type: string
        description: |
          Name of the product characteristic
      value:
        type: string
        description: |
          Value of the product characteristic
      valueType:
        type: string
        description: |
          Value type of the product characteristic
      '@type':
        type: string
        description: |
          Type of the resource - *ProductCharacteristic*
        x-dox-NotImplemented: true
      metadata:
        type: array
        description: |
          Metadata of the product characteristic
        items:
          $ref: '#/definitions/Metadata'
      valueMetadata:
        type: array
        description: |
          Metadata of the product characteristic value
        items:
          $ref: '#/definitions/ValueMetadata'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: ProductCharacteristicExtensions
        x-dox-NotImplemented: true
    description: |
      Characteristics of the product to instantiate or to modify
  ValueMetadata:
    allOf:
    - $ref: '#/definitions/Metadata'
    - type: object
      properties:
        sourceValue:
          type: string
          description: |
            Value of the metadata source
    description: |
      Catalog and operational metadata
  PlaceRef:
    type: object
    properties:
      id:
        type: string
        description: |
          Unique identifier of the place
      href:
        type: string
        description: |
          Hypertext reference to the place
      name:
        type: string
        description: |
          User-friendly name for the place, such as Paris Store, Main Home, and so on
      role:
        type: string
        description: |
          Role of the place
      '@referredType':
        type: string
        description: |
          Name of the type of the referred resource entity
        x-dox-NotImplemented: true
    description: |
      Places where the products are sold or delivered
  ProductRelationship:
    type: object
    properties:
      type:
        type: string
        description: |
          Type of the relationship
      subtype:
        type: string
        description: "Specific relation entity subtype. Relevant for several relation types \n"
      product:
        $ref: '#/definitions/Product'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: ProductRelationshipExtensions
        x-dox-NotImplemented: true
    description: |
      Relationship to another product
  ProductOrderRef:
    type: object
    properties:
      id:
        type: string
        description: |
          Unique identifier of the product order
      href:
        type: string
        description: |
          Hypertext reference to the product order
      validation:
        $ref: '#/definitions/Validation'
      orderItemId:
        type: string
        description: |
          The ID of the order item
    description: |
      Reference to the product order
  Validation:
    type: object
    properties:
      status:
        type: string
        description: |
          Validation status
      validationMessage:
        type: array
        description: |
          Validation message
        items:
          $ref: '#/definitions/ValidationMessage'
      configurationChange:
        type: array
        description: |
          Configuration change
        items:
          $ref: '#/definitions/ConfigurationChange'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: ValidationExtensions
        x-dox-NotImplemented: true
    description: |
      Validation result that is associated with the product order
  ValidationMessage:
    type: object
    properties:
      id:
        type: string
        description: |
          Non-localized name identifier of the validation message
      text:
        type: string
        description: |
          Localized descriptive validation message
      type:
        type: string
        description: |
          Type of the validation message
      subtype:
        type: string
        description: |
          Distinct code which represents the issue
      parameter:
        type: array
        description: |
          Name/value pair of the validation message
        items:
          $ref: '#/definitions/ValidationMessageParameter'
      severity:
        type: string
        description: |
          Severity of the validation message
      path:
        type: string
        description: |
          Path to the resource part to which the validation message is related
      resource:
        type: array
        description: |
          Resource that is associated with the message
        items:
          $ref: '#/definitions/RelatedResource'
    description: |
      Message associated with the validation failure
  ValidationMessageParameter:
    type: object
    properties:
      name:
        type: string
        description: |
          Name of the parameter
      value:
        type: array
        description: |
          Value of the parameter
        items:
          type: string
    description: |
      Name/value pair of the validation message parameter
  RelatedResource:
    type: object
    properties:
      type:
        type: string
        description: |
          Type of the resource
      id:
        type: string
        description: |
          Unique identifier of the resource
      variable:
        type: array
        description: |
          Variables related to the resource
        items:
          $ref: '#/definitions/Variable'
      containedResource:
        type: array
        description: |
          Other resources, specs, or offers that are linked to the message but did not trigger the validation message
        items:
          $ref: '#/definitions/ContainedResource'
    description: |
      Resource that is associated with the validation message (that is, triggered the validation failure)
  Variable:
    type: object
    properties:
      type:
        type: string
        description: |
          Type of the variable
      id:
        type: string
        description: |
          Unique identifier of the variable
      value:
        type: array
        description: |
          Value(s) of the variable
        items:
          type: string
    description: |
      Variable that is associated with a resource
  ContainedResource:
    type: object
    properties:
      type:
        type: string
        description: |
          Type of the resource
      id:
        type: string
        description: |
          Unique identifier of the resource
      variable:
        type: array
        description: |
          Variables that are related to the resource
        items:
          $ref: '#/definitions/Variable'
    description: |
      Resources that are contained in the validation message
  ConfigurationChange:
    type: object
    properties:
      id:
        type: string
        description: |
          Unique identifier of the configuration change
        x-dox-DesignNote: |
          A unique identifier of the validation rule or its message.
      text:
        type: string
        description: |
          Localized descriptive configuration change message
      type:
        type: string
        description: |
          Implementation discriminator of the configuration change
      parameter:
        type: array
        items:
          $ref: '#/definitions/ConfigurationChangeParameter'
      severity:
        type: string
        description: |
          Severity of the configuration change
      path:
        type: string
        description: |
          Path to the configuration change in the resource model
      skipRevalidation:
        type: boolean
        description: |
          Indicates whether revalidation of the configuration change is required
      patchElement:
        type: array
        items:
          $ref: '#/definitions/PatchElement'
      configurationChangeSource:
        type: array
        description: |
          Holds a list of the impacting components that are involved in action rule
          - enablmentRelation - The action rule has impacting enablment relation functionality or was created by this functionality.
          - commertialRelation - The action rule has impacting commertial relation functionality or was created by this functionality.
          - subscriptionRelation - The action rule has impacting subscription relation or was created by this functionality. functionality
          - catalog - The action rule was created by catalog.
        items:
          type: string
    description: |
      Configuration change recommended for a validated resource
  ConfigurationChangeParameter:
    type: object
    properties:
      name:
        type: string
        description: |
          Name of the parameter
      value:
        type: array
        description: |
          Value(s) of the parameter
        items:
          type: string
      valueType:
        type: string
        description: |
          Types of each Value in the parameter array
          As a default - when empty - the type is string.
          Also will be supported-
          ** HashMap - a jason format representation of key value <string,string> map.
    description: |
      Name/value pair of the configuration change parameters
  PatchElement:
    properties:
      op:
        type: string
        description: |
          Operation that is associated with the patched resource part. Valid values are *add*, *remove*, or *replace*.
      path:
        type: string
        description: |
          Path of this resource part within the patched resource, for example, */note*, */name*, or */orderItem/quantity*
      value:
        type: object
        description: |
          Value of the patched resource part
        properties: {}
    description: |
      Patched resource part
  StatusReason:
    type: object
    properties:
      name:
        type: string
        description: |
          Name of the modification reason
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: StatusReasonExtensions
    description: |
      The reason of the product state. This entity is populated only when the referenced product is a product in the inventory.
      Extensions are not implemented.
  BusinessActivity:
    type: object
    properties:
      name:
        type: string
        description: the name of the business activty
      effectiveDate:
        type: string
        format: date-time
        description: the date of the business activty
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: BusinessActivityExtensions
    description: |
      Business Activity include dates that will be used by other system like billing, fulfilment, etc.
      Extensions are not implemented.
  AgreementItemRef:
    type: object
    properties:
      id:
        type: string
        description: |
          Unique-Identifier for the agreement.
      agreementItemId:
        type: string
        description: |
          Unique-Identifier of the agreement item Id of the agreement
      href:
        type: string
        description: |
          URL serving as reference for the agreement resource
      name:
        type: string
        description: |
          Name of the agreement
      agreementType:
        type: string
        description: "Type of Agreement \n"
      '@baseType':
        type: string
        description: |
          Base Type of the agreement
        x-dox-NotImplemented: true
      '@type':
        type: string
        description: |
          Class Type of the Agreement
        x-dox-NotImplemented: true
      '@schemaLocation':
        type: string
        description: |
          The actual location of the agreement.
        x-dox-NotImplemented: true
      '@referredType':
        type: string
        description: |
          The actual type of the target instance when needed for disambiguation.
        x-dox-NotImplemented: true
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: AgreementItemRefExtensions
        x-dox-NotImplemented: true
    description: |
      Agreement Item reference.
  AppointmentRef:
    type: object
    properties:
      id:
        type: string
        description: |
          Unique identifier of the appointment
      href:
        type: string
        description: |
          Hypertext reference to the appointment
      '@referredType':
        type: string
        description: |
          Name of the type of the referred resource entity
        x-dox-NotImplemented: true
    description: |
      Reference to the appointment information that is captured if a product order item requires an appointment between the service provider and the customer.
  ProductOfferingGroupOption:
    type: object
    properties:
      groupOptionId:
        type: string
        description: |
          Unique identifier of the product offering group option in the product catalog
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: ProductOfferingGroupOptionExtensions
        x-dox-NotImplemented: true
    description: |
      Reference to the product offering group option from the product catalog
  OrderTerm:
    type: object
    properties:
      name:
        type: string
        description: |
          Name of the product order commitment term
      description:
        type: string
        description: |
          Description of the product order commitment term
      duration:
        $ref: '#/definitions/Quantity'
      remainingDuration:
        $ref: '#/definitions/Quantity'
      elapsedDuration:
        $ref: '#/definitions/Quantity'
      '@type':
        type: string
        description: |
          Type of the resource
      validFor:
        $ref: '#/definitions/TimePeriod'
      freezeDate:
        type: string
        format: date-time
        description: |
          Date on which the commitment was frozen due to an action performed on the product
      impactType:
        type: string
        description: "Type of the impact on the term of the order item due to an action performed on the product  \n"
      policyId:
        type: string
        description: |
          Unique identifier of the order item term policy
      action:
        type: string
        description: |
          An action performed on a term. Available values can be 'add', 'remove', 'override'
      override:
        type: boolean
        description: |
          Indicates whether the term  is overridden
      changeTermPolicy:
        $ref: '#/definitions/ChangeTermPolicy'
      attachment:
        type: array
        description: |
          Attachment of the product
        items:
          $ref: '#/definitions/Attachment'
      metadata:
        type: array
        description: |
          Metadata of the product order commitment term
        items:
          $ref: '#/definitions/Metadata'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: OrderTermExtensions
        x-dox-NotImplemented: true
    description: |
      Commitment with duration. Both duration and name must be provided.
    x-dox-DesignNote: |
      In practice it stands for Commitment Term (in the future other types of terms may be supported)
  ChangeTermPolicy:
    type: object
    properties:
      startPolicy:
        type: string
        description: |
          Defines the start date policy for the new  or overridden term. The available values are 'actionDate', 'previousTermStartDate', overrideStartDate'
      overrideValidFor:
        $ref: '#/definitions/TimePeriod'
      extensions:
        type: object
        description: extensions
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: ChangeTermPolicyExtension
        x-dox-NotImplemented: true
    description: "The entity holding change term policies \n"
  NextAction:
    type: object
    properties:
      nextActionType:
        type: string
        description: "next action type can be catalog define limit duration product, catalog define limit duration promotion or customer defined temporary action. \n"
      action:
        type: string
        description: "Action applied to the order item (for example - add, suspend, resume, terminate, and so on). \n"
      durationPolicy:
        $ref: '#/definitions/DurationPolicy'
      modifyReason:
        $ref: '#/definitions/ModifyReason'
      calculateEffectiveDate:
        type: string
        format: date-time
        description: |
          the date that will be recalculated by the order handling for the next action
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: NextActionExtensions
    description: |
      Next action in the same order that can be complementary action (for example suspend will have next action resume).
      Extensions are not implemented.
  RelatedImmediatePromotion:
    type: object
    properties:
      id:
        type: string
        description: |
          Unique identifier of the immediate promotion
      itemQualificationType:
        type: string
        description: |
          Type of the qualification result for an item - *trigger* or *benefit*
      itemStatus:
        type: string
        description: |
          Status of the item in the promotion:
          - *add* - A new item in the product promotion
          - *keep* - An existing item that remains as the result of reevaluation in the product promotion
          - *revoke* - An existing item that is revoked as the result of reevaluation in the product promotion
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: RelatedImmediatePromotionExtensions
        x-dox-NotImplemented: true
    description: |
      Reference to the full immediate promotion
  StockItem:
    type: object
    properties:
      stockAvailabilityStatus:
        type: string
        description: |
          Stock availability levels for the product - *inStock*, *outOfStock*, *lowStock*, and *unavailable*
      stockAvailabilityQuantity:
        type: integer
        description: |
          Actual number of items in stock for this product
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: StockItemExtensions
        x-dox-NotImplemented: true
    description: |
      Stock information of the product in the stock management system
  ProductStockReservationRef:
    type: object
    properties:
      id:
        type: string
        description: |
          Unique identifier of the stock reservation
    description: |
      Reference to the stock reservation
  ExternalIdentifier:
    type: object
    properties:
      type:
        type: string
        description: |
          Type of the external system
      id:
        type: string
        description: |
          Unique identifier in the external system
      version:
        type: string
        description: |
          Version of the related entity in the external system
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: ExternalIdentifierExtensions
    description: |
      Reference to an external system identifier
  Note:
    type: object
    required:
    - text
    properties:
      id:
        type: string
        description: |
          Identifier of the note
        readOnly: true
      noteType:
        type: string
        description: |
          Type of the note
      date:
        type: string
        format: date-time
        description: |
          Date of the note
      text:
        type: string
        description: |
          Text of the note
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: NoteExtensions
        x-dox-NotImplemented: true
    description: |
      Extra information about a given entity
  AttachmentRef:
    type: object
    properties:
      description:
        type: string
        description: |
          A narrative text describing the content of the attachment.
        readOnly: true
      href:
        type: string
        description: |
          URL serving as reference for the attachment resource
      id:
        type: string
        description: |
          Unique-Identifier for this attachment
      url:
        type: string
        description: |
          Link to the attachment media/content
      attachmentType:
        type: string
        description: "Type of Attachment e.g. driving License, passport, screenshot      \n"
      '@referredType':
        type: string
        description: |
          The actual type of the target instance when needed for disambiguation.
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: AttachmentRefExtensions
        x-dox-NotImplemented: true
    description: |
      Attachment reference. An attachment complements the description of an element (for instance a product) through video, pictures.
  ChannelRef:
    type: object
    required:
    - id
    properties:
      id:
        type: string
        description: |
          Unique identifier of the channel
      href:
        type: string
        description: |
          Hypertext reference to the channel
      name:
        type: string
        description: |
          Name of the channel
      role:
        type: string
        description: |
          Role of the channel, for example, *initChannel*
      '@type':
        type: string
        description: |
          Type of the resource
        x-dox-NotImplemented: true
    description: |
      Channel associated with a resource
  ImmediatePromotion:
    type: object
    properties:
      id:
        type: string
        description: |
          Unique identifier of the immediate promotion
      status:
        type: string
        description: |
          Status of the instance of the immediate promotion
      state:
        type: string
        description: |
          The apply state of the qualified promotion. The state can have the following values:
          - 'applied' - For an immediate promotion that all of it's benefits are applied
          - 'notApplied' - For an immediate promotion that none of it's benefits are applied - future
          - 'partiallyApplied' - For an immediate promotion that part of it's benefits are applied - future
          - 'pendingApply' - Received in the request for an immediate promotion for which certain benefits, which are selected externally by a consuming application, should be applied
      promotion:
        $ref: '#/definitions/PromotionRef'
      productPromotion:
        $ref: '#/definitions/ProductPromotionRef'
      triggerItem:
        type: array
        items:
          $ref: '#/definitions/TriggerItem'
        x-dox-DesignNote: |
          A reference to the TriggerItem  definition.
      benefitItem:
        type: array
        items:
          $ref: '#/definitions/BenefitItem'
        x-dox-DesignNote: |
          A reference to the Benefit definition.
      immediatePromotionCharacteristic:
        type: array
        items:
          $ref: '#/definitions/ContextCharacteristic'
      reason:
        $ref: '#/definitions/ModifyReason'
      relatedParty:
        $ref: '#/definitions/RelatedPartyRef'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: ImmediatePromotionExtensions
        x-dox-NotImplemented: true
    description: |
      Immediate promotion
  PromotionRef:
    type: object
    properties:
      id:
        type: string
        description: |
          Unique identifier of the promotion
      name:
        type: string
        description: |
          Name of the promotion
      description:
        type: string
        description: |
          Promotion description for a business user
      validFor:
        $ref: '#/definitions/TimePeriod'
      type:
        type: string
        description: |
          The type of the promotion
      priority:
        type: integer
        description: |
          The priority of the promotion
      applyPolicy:
        type: string
        description: "Defines the policy to apply the promotion - can be manual or automatic \n"
      href:
        type: string
        format: url
        description: |
          Hypertext reference to the promotion
        readOnly: true
    description: |
      Reference to the promotion
    x-dox-DesignNote: |
      Promotion description for a business user
  ProductPromotionRef:
    type: object
    properties:
      id:
        type: string
        description: |
          Unique identifier of the product promotion
      href:
        type: string
        format: url
        description: |
          Hypertext reference to the product promotion
        readOnly: true
    description: |
      Reference to the product promotion.
    x-dox-DesignNote: |
      Product Promotion description for Business user
  TriggerItem:
    type: object
    properties:
      id:
        type: string
        description: |
          Unique identifier of the trigger item
      href:
        type: string
        format: url
        description: |
          Hypertext reference to the trigger item
      itemType:
        type: string
        description: |
          Type of the trigger item
      promotionCriteriaGroupId:
        type: string
        description: |
          Unique identifier of the promotion criteria group (root or nested) as part of which this item is qualified as trigger item
      itemStatus:
        type: string
        description: |
          Status of the trigger item in the promotion&#58;
          - *add* - A new trigger item in the product promotion
          - *keep* - An existing trigger item that remains as the result of reevaluation in the product promotion
          - *revoke* - An existing trigger item that is revoked as the result of reevaluation in the product promotion
      pathToRoot:
        type: string
        description: |
          Path from the current item in the product offering structure to the root. Populated if the trigger item is a nested item.
      triggerItemCharacteristic:
        type: array
        items:
          $ref: '#/definitions/ContextCharacteristic'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: TriggerItemExtensions
        x-dox-NotImplemented: true
    description: |
      Item that participated in the promotion qualification
  ContextCharacteristic:
    type: object
    properties:
      name:
        type: string
        description: |
          The name of the characteristic
      contextType:
        type: string
        description: |
          The context type of the characteristic
      valueType:
        type: string
        description: "The value type of the characteristic \n"
      value:
        type: array
        description: |
          The value of the characteristic
        items:
          type: string
    description: |
      The list of dynamic characteristics related to a specific context
  BenefitItem:
    type: object
    properties:
      id:
        type: string
        description: "Unique identifier of the benefit item \n"
      href:
        type: string
        description: |
          Hypertext reference to the benefit item
      itemType:
        type: string
        description: |
          Type of the benefit item
      promotionCriteriaGroupId:
        type: string
        description: |
          Unique identifier of the promotion criteria group (root or nested) as part of which this item is qualified as a benefit item
      itemStatus:
        type: string
        description: |
          Status of the benefit item in the promotion&#58;
          - *add* - A new benefit item in the product promotion
          - *keep* - An existing benefit item that remains as the result of reevaluation in the product promotion
          - *revoke* - An existing benefit item that is revoked as the result of reevaluation in the product promotion
      itemState:
        type: string
        description: |
          The apply state of the benefit on a benefit item. The state can have the following values&#58;
          - 'applied' - For a benefit that is applied
          - 'notApplied' - For a benefit that is not applied
          - 'pendingApply' - Received in the request for a benefit, for which the relevant benefit item is selected and should be applied
      pathToRoot:
        type: string
        description: |
          Path from the current item in the product offering structure to the root. Populated if the benefit item is a nested item.
      action:
        type: array
        items:
          $ref: '#/definitions/PromotionAction'
        x-dox-DesignNote: |
          A reference to the Benefit definition.
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: BenefitItemExtensions
        x-dox-NotImplemented: true
    description: |
      Item that received the promotion benefit, which is a benefit granted through the promotion - can be discount, allowance, free services
  PromotionAction:
    required:
    - actionType
    properties:
      id:
        type: string
        description: |
          Unique identifier of the promotion action
      name:
        type: string
        description: |
          Name of the promotion action
      description:
        type: string
        description: |
          Description of the promotion action
      actionType:
        type: string
        description: |
          Type of the action. A valid value is *priceAlteration*, *productOfferingBenefit*.
      actionValue:
        type: integer
        description: |
          Value of the action. Currently, the value is populated with '1' as the actual action value is defined in either promotionPriceAlteration or in productOfferingBenefit
      promotionPriceAlteration:
        $ref: '#/definitions/PromotionPriceAlteration'
      productOfferingBenefit:
        type: array
        description: |
          Reference to a product offering usaed as a free offer benefit by the promotion
        items:
          $ref: '#/definitions/ProductOfferingBenefit'
      durationPolicy:
        $ref: '#/definitions/DurationPolicy'
      validFor:
        $ref: '#/definitions/TimePeriod'
      actionTerminationPolicy:
        type: string
        description: |
          `deprecated`
          Defines the termination policy upon duration end date
      relatedTriggerItem:
        type: array
        description: "An optional relation from a specific promotion action to a specific trigger item. For promotion action with actionType = productOfferingBenefit and actionObjectRef pointing to one of the criteria groups, this relation indicates a relevant trigger item(s) to which the action should be related. \n"
        items:
          $ref: '#/definitions/RelatedTriggerItem'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: PromotionActionExtensions
        x-dox-NotImplemented: true
    description: |
      Action of the promotion. Customers can receive benefits associated with the action if the conditions in the promotion pattern are fulfilled.
      `Note - actionTerminationPolicy field is deprecated. Use durationPolicy.terminationPolicy field instead`.
  PromotionPriceAlteration:
    properties:
      id:
        type: string
      priceType:
        type: string
        description: ProductOfferingPrice price type (OC/RC)
      productOfferingPrice:
        $ref: '#/definitions/ItemProductOfferingPriceRef'
      priceAlterationOverrideOption:
        $ref: '#/definitions/PriceAlterationOverrideOption'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: PromotionPriceAlterationExtensions
        x-dox-NotImplemented: true
    description: |
      The action discount reference, representing the relevant pricing entity that defines the actual discount
  PriceAlterationOverrideOption:
    type: object
    properties:
      overrideType:
        type: string
        description: |
          Indicates which override option the CSR can apply. Valid Values : decrease, absolute
      overrideValue:
        $ref: '#/definitions/PaymentAmount'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: PriceAlterationOverrideOption
        x-dox-NotImplemented: true
    description: |
      The override data of a price alteration
  ProductOfferingBenefit:
    type: object
    properties:
      productOfferingId:
        type: string
        description: |
          the id of the product offering granted as a benefit
      promotionPriceAlteration:
        type: array
        description: |
          referecne to price entity representing the actual monetary discount
        items:
          $ref: '#/definitions/PromotionPriceAlteration'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: ProductOfferingBenefitExtensions
        x-dox-NotImplemented: true
    description: Reference to a product offering used as a free offer benefit by the promotion
  RelatedTriggerItem:
    type: object
    properties:
      id:
        type: string
        description: |
          The unique ID of the related trigger item
      role:
        type: string
        description: |
          The role of the related trigger item
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: RelatedTriggerItemExtensions
        x-dox-NotImplemented: true
    description: |
      A relation to a specific trigger item. For example, for promotion action with actionType = productOffering, this relation indicates a relevant trigger item to which the action should be related. The type of the relation is specified in 'role' field
  OrderRelationship:
    type: object
    properties:
      id:
        type: string
        description: |
          Unique identifier of the product order
      href:
        type: string
        description: |
          Hypertext reference to the product order
      type:
        type: string
        description: |
          Relation type
    description: |
      Relation to another product order
  ReferredEntity:
    type: object
    properties:
      id:
        type: string
        description: |
          The unique ID of the referred entity. For example, Payment ID.
      '@referredType':
        type: string
        description: |
          Referred entity type (for example payment).
      role:
        type: string
        description: |
          The role of the referref entity, for example, in case of payment etity specifies if it is internal or external
      relatedItem:
        type: array
        description: |
          An item related to an entity referenced within the order. For example, order item or item price related to the referenced payment entity.
        items:
          $ref: '#/definitions/RelatedItem'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: ReferredEntityExtensions
        x-dox-NotImplemented: true
    description: "An optional generic object that can be used to represents a split or a propagated data of an entity referenced within the current resource  structure. This object  holds an explicit relation all the sub entities to which it relates. For example, a specific Payment referenced within an order holds explicit relation to all order items and all item prices that it covers. \n"
  RelatedItem:
    type: object
    properties:
      id:
        type: string
        description: |
          The unique ID of the related item. For example, order item ID, item price ID
      '@referredType':
        type: string
        description: |
          Referred entity type (for example order item, item price etc.).
      relatedItem:
        type: array
        description: |
          A nested item related to an entity referenced within the order. For example, item price under a specific item related to entity reference within an order.
        items:
          $ref: '#/definitions/RelatedItem'
      relatedItemVariable:
        type: array
        description: |
          Variables related to the related item. For example, priceType variable specifying the related item price
        items:
          $ref: '#/definitions/Variable'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: RelatedItemExtensions
        x-dox-NotImplemented: true
    description: "An item related to an entity referenced within the order. For example, order/cart item or item price related to the referenced payment entity. \n"
  AgreementRef:
    type: object
    properties:
      id:
        type: string
        description: |
          Unique-Identifier for the agreement.
      href:
        type: string
        description: |
          URL serving as reference for the agreement resource
      name:
        type: string
        description: |
          Name of the agreement
      agreementType:
        type: string
        description: |
          Type of Agreement
      '@baseType':
        type: string
        description: |
          Base Type of the agreement
        x-dox-NotImplemented: true
      '@type':
        type: string
        description: |
          Class Type of the Agreement
        x-dox-NotImplemented: true
      '@schemaLocation':
        type: string
        description: |
          The actual location of the agreement.
        x-dox-NotImplemented: true
      '@referredType':
        type: string
        description: |
          The actual type of the target instance when needed for disambiguation.
        x-dox-NotImplemented: true
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: AgreementRefExtensions
        x-dox-NotImplemented: true
    description: |
      Agreement reference.
  ProductOrderRemoveNotification:
    allOf:
    - $ref: '#/definitions/Notification'
    - type: object
      properties:
        event:
          $ref: '#/definitions/ProductOrderRemoveEvent'
  ProductOrderRemoveEvent:
    allOf:
    - $ref: '#/definitions/Event'
    - type: object
      properties:
        productOrder:
          $ref: '#/definitions/ProductOrder'
  ProductOrderStateChangeNotification:
    allOf:
    - $ref: '#/definitions/Notification'
    - type: object
      properties:
        event:
          $ref: '#/definitions/ProductOrderStateChangeEvent'
  ProductOrderStateChangeEvent:
    allOf:
    - $ref: '#/definitions/Event'
    - type: object
      properties:
        state:
          type: string
        previousState:
          type: string
        productOrder:
          $ref: '#/definitions/ProductOrder'
  ProductOrderChangeNotification:
    allOf:
    - $ref: '#/definitions/Notification'
    - type: object
      properties:
        event:
          $ref: '#/definitions/ProductOrderChangeEvent'
  ProductOrderChangeEvent:
    allOf:
    - $ref: '#/definitions/Event'
    - type: object
      properties:
        originalResource:
          $ref: '#/definitions/ProductOrder'
        productOrder:
          $ref: '#/definitions/ProductOrder'
  ProductLimitedDurationFailedNotification:
    allOf:
    - $ref: '#/definitions/Notification'
    - type: object
      properties:
        event:
          $ref: '#/definitions/ProductLimitedDurationFailedEvent'
  ProductLimitedDurationFailedEvent:
    allOf:
    - $ref: '#/definitions/Event'
    - type: object
      properties:
        productOrder:
          $ref: '#/definitions/ProductOrderRef'
  ProductOrderCompletedNotification:
    allOf:
    - $ref: '#/definitions/Notification'
    - type: object
      properties:
        event:
          $ref: '#/definitions/ProductOrderCompletedEvent'
  ProductOrderCompletedEvent:
    allOf:
    - $ref: '#/definitions/Event'
    - type: object
      properties:
        orderItem:
          type: array
          items:
            $ref: '#/definitions/OrderItemNotification'
        productOrder:
          $ref: '#/definitions/ProductOrderRef'
  OrderItemNotification:
    type: object
    properties:
      id:
        type: string
        description: |
          Unique identifier of the order item notification
      state:
        type: string
        description: |
          The state of the order item notification
      orderItem:
        type: array
        items:
          $ref: '#/definitions/OrderItemNotification'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: OrderItemNotificationExtensions
        x-dox-NotImplemented: true
    description: |
      Order item notification
  ProductOrderSubmittedNotification:
    allOf:
    - $ref: '#/definitions/Notification'
    - type: object
      properties:
        event:
          $ref: '#/definitions/ProductOrderSubmittedEvent'
  ProductOrderSubmittedEvent:
    allOf:
    - $ref: '#/definitions/Event'
    - type: object
      properties:
        orderItem:
          type: array
          items:
            $ref: '#/definitions/OrderItemNotification'
        productOrder:
          $ref: '#/definitions/ProductOrderRef'
  ProductOrderSubmitFailureNotification:
    allOf:
    - $ref: '#/definitions/Notification'
    - type: object
      properties:
        event:
          $ref: '#/definitions/ProductOrderSubmitFailureEvent'
  ProductOrderSubmitFailureEvent:
    allOf:
    - $ref: '#/definitions/Event'
    - type: object
      properties:
        productOrder:
          $ref: '#/definitions/ProductOrderRef'
  ProductFutureOrderItemNotification:
    allOf:
    - $ref: '#/definitions/Notification'
    - type: object
      properties:
        event:
          $ref: '#/definitions/ProductFutureOrderItemEvent'
  ProductFutureOrderItemEvent:
    allOf:
    - $ref: '#/definitions/Event'
    - type: object
      properties:
        orderItem:
          type: array
          items:
            $ref: '#/definitions/FutureOrderItem'
  FutureOrderItem:
    properties:
      id:
        type: string
        description: |
          Unique identifier of the future order item
        readOnly: true
      type:
        type: string
        description: |
          Type of the scheduling entity - future order or temp item
      status:
        type: string
        description: |
          Launcher state of the product order, such as PendingExecute, Canceled, Executed, and so on
      orderItemId:
        type: string
        description: |
          Unique identifier of the order item
      requestedDate:
        type: string
        format: date-time
        description: |
          Date on which the future order item is scheduled
      requestedStartDate:
        type: string
        format: date-time
        description: |
          Requested modification start date
      productOfferingType:
        type: string
        description: |
          Type of the product offering
      productOfferingTypeGroup:
        type: string
        description: |
          The type of the product offering group
      productOrder:
        $ref: '#/definitions/FutureProductOrder'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: FutureOrderItemExtensions
        x-dox-NotImplemented: true
    description: |
      Future product order item
  FutureProductOrder:
    type: object
    properties:
      id:
        type: string
        description: |
          Unique identifier of the future product order
      relatedParty:
        $ref: '#/definitions/RelatedPartyRef'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: FutureProductOrderExtensions
        x-dox-NotImplemented: true
    description: |
      Future product order
  ProductFutureOrderItemChangeNotification:
    allOf:
    - $ref: '#/definitions/Notification'
    - type: object
      properties:
        event:
          $ref: '#/definitions/ProductFutureOrderItemChangeEvent'
  ProductFutureOrderItemChangeEvent:
    allOf:
    - $ref: '#/definitions/Event'
    - type: object
      properties:
        productOrder:
          $ref: '#/definitions/ProductOrderFuture'
        orderItem:
          type: array
          items:
            $ref: '#/definitions/OrderItem'
  ProductOrderFuture:
    type: object
    properties:
      id:
        type: string
        description: |
          Unique identifier of the product order
      relatedParty:
        type: array
        description: |
          Related party of the product order
        items:
          $ref: '#/definitions/RelatedPartyRef'
      channel:
        type: array
        description: |
          Channel of the product order
        items:
          $ref: '#/definitions/ChannelRef'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: ProductOrderFutureExtensions
        x-dox-NotImplemented: true
    description: |
      Future product order
  FalloutNotification:
    allOf:
    - $ref: '#/definitions/Notification'
    - type: object
      properties:
        event:
          $ref: '#/definitions/FalloutEvent'
  FalloutEvent:
    type: object
    required:
    - eventDate
    - eventSource
    - primaryIssue
    - primaryItem
    properties:
      id:
        type: string
        description: "Unique identifier that identifies the event. This microservice expects this id to be generated by the source systems and the source system can store this ID at their end for future use. If the source system will not send the ID then this microservice will create an unique id for each such fallout item to be reported. This will need to be persisted by fallout management system and in future we can use this ID to query the fallout management system as externalId to fetch details/status of the fallout item. \n"
      status:
        type: string
        description: |
          The status of the fallout event.
      statusDate:
        type: string
        format: date-time
        description: |
          The date/time at which the status was last changed.
      eventSource:
        type: string
        description: |
          The source of the fallout event. This will be the value of the domain which is creating the fallout item. The actualy MS/system within the domain to be sent inside the primaryIssue fields. Below are the values to be used for eventSource
          - OrderHandling
          - OrderCapture
          - Care
          - CatalonOne
          - DigitalExperience
          - and more ...
      eventSalesChannel:
        type: string
        description: |
          The sales channel of the fallout event. In case of orders (OC and OH) this can be sales channel on the order, for care it could be call center, retail etc. For online self service channels this could be self-service channel.
      eventUser:
        type: string
        description: |
          The logged-in user from the source system if available.
      eventTraceId:
        type: string
        description: |
          The trace id generated from the source system of the fallout event.
      eventDate:
        type: string
        format: date-time
        description: |
          The date/time at which the event occurred.
      primaryItem:
        $ref: '#/definitions/FalloutItem'
      primaryIssue:
        $ref: '#/definitions/Issue'
      properties:
        type: array
        description: |
          Additional properties describing the fallout item. This can be used to send in more properties as needed for the fallout event in context.
        items:
          $ref: '#/definitions/NameValuePair'
      relatedParty:
        type: array
        description: |
          The reference to the related party e.g. customerId, IndividualId or organization
        items:
          $ref: '#/definitions/FalloutRelatedPartyRef'
    description: |
      A representation of a fallout event from a source system and the tracking to
      resolution.
  FalloutItem:
    type: object
    required:
    - id
    - name
    - type
    properties:
      id:
        type: string
        description: |
          The identifier of the fallout item. e.g. if the item is ProductOrder then orderId
      type:
        type: string
        description: |
          The type of the fallout item. i.e. ProductOrder
      name:
        type: string
        description: |
          An identifying name for this fallout item.
      relatedItem:
        type: array
        description: |
          related items associated with this item.
        items:
          $ref: '#/definitions/FalloutItem'
      properties:
        type: array
        description: |
          Additional properties describing the fallout item
        items:
          $ref: '#/definitions/NameValuePair'
      relatedData:
        type: array
        description: |
          Additional related data associated to the fallout item.
        items:
          $ref: '#/definitions/RelatedData'
    description: |
      Holds the information about the item/entity that was being processed.
  NameValuePair:
    type: object
    required:
    - name
    properties:
      name:
        type: string
        description: |
          The name of the pair.
      value:
        type: string
        description: |
          The value of the pair.
    description: |
      Holds a simple name/value combination.
  RelatedData:
    type: object
    required:
    - name
    properties:
      name:
        type: string
        description: |
          The unique name for this data.
      data:
        type: object
        description: |
          The associated data for this item. Since fallout management system needs to upfront know the structure of the data for them to deserialize, this strucuture will be deserialized to string at their end and persisted.
        properties: {}
    description: |
      Holds additional related data for the item.
  Issue:
    type: object
    properties:
      source:
        type: string
        description: |
          The source of the issue. This will be application / MS name within DigitalOne which is reporting to fallout.
          e.g.
          - ProductOrder
          - HandleOrder
          - WorkflowManager
          - Customer
          - and more...
      code:
        type: string
        description: "The code associated with the issue. This is the exact error code with pre-defined format in digitalOne. Below is a format\nDE-PREFIX-CODE\n  - DE is a fixed string. \n  - PREFIX is a unique identifier for the microservice. i.e. CART. Prefixes should be limited in size so abbreviations are allowed\n  - CODE is a unique error number, always 8 digits, within the microservice\n\nAdditional rules for CODE = \n  Format = CL######\n  C is for customization layers, with digital service teams should use either 0 or 1. \n  Additional values are  3=MPS, 7=galaxy, 9=customer\n  L is used to indicate the layer within the microservice that is responsible for the message\n    1 - Resource layer\n    2 - Service/Domain layer\n    3 - Gateway layer\n    4 - Persistence layer\n  \"######\" is for the unique identifier of the code\ne.g.\n\n  DE-OHBLFULFILLMNT-03502801\nHere,\n  DE = digital experience (fixed string)\n  OHBLFULFILLMNT = Order Handling Billing Fulfillment microservice\n  03502801 = error code broken down as below\n    03 = Gateway Layer\n    502 = The error code the source system received from the external (callee) system\n    801 = internal error code in the microservice\n"
      type:
        type: string
        description: |
          The type of the issue. i.e. Java exception class name
      message:
        type: string
        description: |
          The message associated with the issue
      stackTrace:
        type: string
        description: |
          The associated stack trace for the issue
      relatedIssue:
        description: |
          Another issue that may be related to this issue, this additional information can help fallout management to take appropriate decision.
        $ref: '#/definitions/Issue'
      previousIssue:
        description: |
          This holds the previous issue that may have been reported to fallout for the same primary item concerned, this additional information can help fallout management to take appropriate decision.
        $ref: '#/definitions/Issue'
    description: |
      Holds the actual issue information that will be reported to fallout. This will include technical details of the error/exception that has occured.
  FalloutRelatedPartyRef:
    type: object
    properties:
      id:
        type: string
        description: |
          Unique id of an existing party.
      href:
        type: string
        description: |
          The self href for the existing related party.
      name:
        type: string
        description: |
          The name of related party.
        x-amdocs:
          protected-data:
            pii: nameInfo:name
      role:
        type: string
        description: "The role of related party like Primary/Secondary.\nValid values - TODO \n"
      type:
        type: string
        description: |
          Describes if it's Customer/Individual/Organazation
          Patchable - No
      validFor:
        $ref: '#/definitions/TimePeriod'
    description: |
      Contains reference to the related party. e.g. customer, individual, organization
  ProductOrderArchiveNotification:
    allOf:
    - $ref: '#/definitions/Notification'
    - type: object
      properties:
        event:
          $ref: '#/definitions/ProductOrderArchiveEvent'
  ProductOrderArchiveEvent:
    allOf:
    - $ref: '#/definitions/Event'
    - type: object
      properties:
        externalId:
          type: string
        productOrderId:
          type: string
        productOrder:
          $ref: '#/definitions/ProductOrder'
x-dox-DesignDocs:
- description: |
    The Product Ordering Management subdomain places a product order with the required order parameters, including such related activities as validation, submitting to fulfillment, and managing the product order status. A product order entity is created based on a product offering that is defined in the product catalog. The subdomain enables configuring a product and capturing additional information, such as payment and delivery details, prior to submitting the order to fulfillment.
  url: http://confluence/display/DEP/Product+Ordering+Management

